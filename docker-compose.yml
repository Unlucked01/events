version: '3.8'

services:
  # Backend API service
  backend:
    build: ./backend
    container_name: events-backend
    env_file:
      - ./backend/.env
    environment:
      - BASE_URL=https://unl-events.duckdns.org
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - uploads_data:/app/static/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # Frontend service
  frontend:
    build: ./frontend_v2
    container_name: events-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://unl-events.duckdns.org/api
    depends_on:
      - backend
    restart: always
  
  # Database service
  db:
    image: postgres:13
    container_name: events-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=events_db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d events_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_buffers=128MB
      -c max_connections=100
      -c effective_cache_size=256MB
      -c maintenance_work_mem=32MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=8MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

# Define volumes
volumes:
  postgres_data:
  uploads_data:  # For persisting uploads

# Define networks
networks:
  app_network:
    driver: bridge 