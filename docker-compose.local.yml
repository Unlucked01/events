version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: events-backend-local
    environment:
      - BASE_URL=http://localhost:3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/events_db
      - SECRET_KEY=your-secret-key-for-local-development
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
      - UPLOAD_DIR=static/uploads
      - MAX_FILE_SIZE=10485760
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - uploads_data_local:/app/static/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network_local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # Frontend service
  frontend:
    build:
      context: ./frontend_v2
      dockerfile: Dockerfile.dev
    container_name: events-frontend-local
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - INTERNAL_API_URL=http://backend:8000
    depends_on:
      - backend
    restart: always
    networks:
      - app_network_local
    volumes:
      - ./frontend_v2:/app
      - /app/node_modules
      - /app/.next
  
  # Database service
  db:
    image: postgres:15
    container_name: events-db-local
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=events_db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
    networks:
      - app_network_local
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d events_db"]
      interval: 10s
      timeout: 5s
      retries: 5

# Define volumes
volumes:
  postgres_data_local:
  uploads_data_local:

# Define networks
networks:
  app_network_local:
    driver: bridge 